#https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
kube-prometheus-stack:
  alertmanager:
    alertmanagerSpec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
  prometheusOperator:
    admissionWebhooks:
      patch:
        nodeSelector:
          kubernetes.io/os: linux
          kubernetes.io/arch: amd64
    nodeSelector:
      kubernetes.io/os: linux
      kubernetes.io/arch: amd64
  # Create default rules for monitoring the cluster
  # Disable rules for unreachable components
  defaultRules:
    create: true
    rules:
      etcd: false
      kubeScheduler: false
  # Disable component scraping for the kube controller manager, etcd, and kube-scheduler
  # These components are not reachable on EKS
  kubeControllerManager:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  prometheus:
    prometheusSpec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
    # Prometheus StorageSpec for persistent data on AWS EBS
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp3
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    additionalScrapeConfigs:
      - job_name: "cjoc"
        metrics_path: "/prometheus/"
        static_configs:
          - targets: ["cjoc.cbci.svc.cluster.local:80"]
    #https://observability.thomasriley.co.uk/prometheus/configuring-prometheus/using-service-monitors/
    serviceMonitorSelector:
      matchLabels:
        app.kubernetes.io/instance: kube-prometheus-stack
  prometheus-node-exporter:
    #https://github.com/bitnami/charts/issues/6345#issuecomment-840417220
    nodeSelector:
      kubernetes.io/os: linux
      kubernetes.io/arch: amd64
  thanosRuler:
    thanosRulerSpec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
  grafana:
    # https://0xdc.me/blog/a-set-of-modern-grafana-dashboards-for-kubernetes/
    # https://github.com/dotdc/grafana-dashboards-kubernetes/tree/master#install-with-helm-values
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "grafana-dashboards-kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
          - name: "grafana-dashboards-cloudbees"
            orgId: 1
            folder: "CloudBees"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-cloudbees
    dashboards:
      grafana-dashboards-kubernetes:
        k8s-views-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          token: ""
        k8s-views-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          token: ""
        k8s-views-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          token: ""
        k8s-views-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          token: ""
      grafana-dashboards-cloudbees:
        cb-controllers:
          url: https://raw.githubusercontent.com/carlosrodlop/K8s-lib/main/helm/charts/kube-prometheus-stack-local/dashboards/cloudbees-controllers.json
          token: ""
