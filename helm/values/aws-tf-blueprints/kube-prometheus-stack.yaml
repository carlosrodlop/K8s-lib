#https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
#https://observability.thomasriley.co.uk/prometheus/configuring-prometheus/using-service-monitors/
alertmanager:
  alertmanagerSpec:
    nodeSelector:
      kubernetes.io/os: linux
      kubernetes.io/arch: amd64
prometheusOperator:
  admissionWebhooks:
    patch:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.io/arch: amd64
prometheus:
  prometheusSpec:
    nodeSelector:
      kubernetes.io/os: linux
      kubernetes.io/arch: amd64
    additionalScrapeConfigs:
      - job_name: "cjoc"
        metrics_path: "/prometheus/"
        static_configs:
          - targets: ["cjoc.cbci.svc.cluster.local:80"]
    serviceMonitorSelector:
      # Note: For all Service Monitors, use a common label
      matchLabels:
        release: kube-prometheus-stack
      # Note: For all Service Monitors, use a common label
      # matchExpressions:
      #   - key: serviceMonitorSelector
      #     operator: Exists
additionalPrometheusRulesMap:
  rule-name:
    groups:
      - name: Jenkins Jobs
        rules:
          - alert: JenkinsTooManyJobsQueued
            expr: sum(jenkins_queue_size_value) > 5
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} too many jobs queued"
              description: "{{ $labels.app_kubernetes_io_instance }} has {{ $value }} jobs stuck in the queue"
          - alert: JenkinsTooManyJobsStuckInQueue
            expr: sum(jenkins_queue_stuck_value) by (app_kubernetes_io_instance) > 5
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} too many jobs queued"
              description: " {{ $labels.app_kubernetes_io_instance }} has {{ $value }} jobs in queue"
          - alert: JenkinsWaitingTooMuchOnJobStart
            expr: sum (jenkins_job_waiting_duration) by (app_kubernetes_io_instance) > 0.05
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: "{{ $labels.app_kubernetes_io_instance }} waits too long for jobs"
              description: "{{ $labels.app_kubernetes_io_instance }} is waiting on average {{ $value }} seconds to start a job"
          - alert: JenkinsTooLowJobSuccessRate
            expr: sum(jenkins_runs_success_total) by (app_kubernetes_io_instance) / sum(jenkins_runs_total_total) by (app_kubernetes_io_instance) < 0.60
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} has a too low job success rate"
              description: " {{ $labels.app_kubernetes_io_instance }} instance has {{ $value }}% of jobs being successful"
      - name: Jenkins Uptime
        rules:
          - alert: JenkinsNewOrRestarted
            expr: sum(vm_uptime_milliseconds) by (app_kubernetes_io_instance) / 3600000 < 2
            for: 3m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} has low uptime"
              description: " {{ $labels.app_kubernetes_io_instance }} has low uptime and was either restarted or is a new instance (uptime: {{ $value }} hours)"
      - name: Jenkins Plugins
        rules:
          - alert: JenkinsTooManyPluginsNeedUpate
            expr: sum(jenkins_plugins_withUpdate) by (app_kubernetes_io_instance) > 3
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} too many plugins updates"
              description: " {{ $labels.app_kubernetes_io_instance }} has {{ $value }} plugins that require an update"
      - name: Jenkins jvm
        rules:
          - alert: JenkinsToManyOpenFiles
            expr: sum(vm_file_descriptor_ratio) by (app_kubernetes_io_instance) > 0.040
            for: 5m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} has a to many open files"
              description: " {{ $labels.app_kubernetes_io_instance }} instance has used {{ $value }} of available open files"
          - alert: JenkinsVMMemoryRationTooHigh
            expr: sum(vm_memory_heap_usage) by (app_kubernetes_io_instance) > 0.70
            for: 3m
            labels:
              severity: notify
            annotations:
              summary: "{{$labels.app_kubernetes_io_instance}} too high memory ration"
              description: "{{$labels.app_kubernetes_io_instance}} has a too high VM memory ration"
          - alert: JenkinsVMGCToolow
            expr: 1 - sum(vm_gc_G1_Young_Generation_time)by (app_kubernetes_io_instance)  /  sum (vm_uptime_milliseconds) by (app_kubernetes_io_instance) < 0.99
            for: 30m
            labels:
              severity: notify
            annotations:
              summary: "{{ $labels.instance }} too low GC throughput"
              description: "{{ $labels.instance }} has too low Garbage Collection throughput"
      - name: web
        rules:
          - alert: JenkinsTooSlow
            expr: sum(http_requests{quantile="0.99"} ) by (app_kubernetes_io_instance) > 1
            for: 3m
            labels:
              severity: notify
            annotations:
              summary: "{{ $labels.app_kubernetes_io_instance }} is too slow"
              description: "{{ $labels.app_kubernetes_io_instance }}  More then 1% of requests are slower than 1s (request time: {{ $value }})"
          - alert: AppTooSlow
            expr: sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{le="0.25"}[5m])) by (ingress) / sum(rate(nginx_ingress_controller_request_duration_seconds_count[5m])) by (ingress) < 0.95
            for: 5m
            labels:
              severity: notify
            annotations:
              summary: "Application - {{ $labels.ingress }} - is too slow"
              description: " {{ $labels.ingress }} - More then 5% of requests are slower than 0.25s"
      - name: Jenkins healthcheck
        rules:
          - alert: JenkinsHealthScoreToLow
            expr: sum(jenkins_health_check_score) by (app_kubernetes_io_instance) < 1
            for: 5m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} has a to low health score"
              description: " {{ $labels.app_kubernetes_io_instance }} a health score lower than 100%"
          - alert: JenkinsTooSlowHealthCheck
            expr: sum(jenkins_health_check_duration{quantile="0.999"})
              by (app_kubernetes_io_instance) > 0.001
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: " {{ $labels.app_kubernetes_io_instance }} responds too slow to health check"
              description: " {{ $labels.app_kubernetes_io_instance }} is responding too slow to the regular health check"
      - name: Jenkins Nodes
        rules:
          - alert: JenkinsTooManyOfflineNodes
            expr: sum(jenkins_node_offline_value) by (app_kubernetes_io_instance) > 3
            for: 1m
            labels:
              severity: notify
            annotations:
              summary: "{{ $labels.app_kubernetes_io_instance }} has a too many offline nodes"
              description: "{{ $labels.app_kubernetes_io_instance }} has {{ $value }} nodes that are offline for some time (5 minutes)"
      - name: Kubernetes Nodes
        rules:
          - alert: NodeHighCpuLoad
            expr: avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[1m]) * 100) < 30
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "High usage on {{ $labels.instance }}"
              description: "{{ $labels.instance }} has a average CPU idle (current value: {{ $value }}s)"
prometheus-node-exporter:
  #https://github.com/bitnami/charts/issues/6345#issuecomment-840417220
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.io/arch: amd64
thanosRuler:
  thanosRulerSpec:
    nodeSelector:
      kubernetes.io/os: linux
      kubernetes.io/arch: amd64
grafana:
  # https://0xdc.me/blog/a-set-of-modern-grafana-dashboards-for-kubernetes/
  # https://github.com/dotdc/grafana-dashboards-kubernetes/tree/master#install-with-helm-values
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "grafana-dashboards-kubernetes"
          orgId: 1
          folder: "Kubernetes"
          type: file
          disableDeletion: true
          editable: true
          options:
            path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
        - name: "grafana-dashboards-cloudbees"
          orgId: 1
          folder: "CloudBees"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/grafana-dashboards-cloudbees
  dashboards:
    grafana-dashboards-kubernetes:
      k8s-views-global:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
        token: ""
      k8s-views-namespaces:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
        token: ""
      k8s-views-nodes:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
        token: ""
      k8s-views-pods:
        url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
        token: ""
    grafana-dashboards-cloudbees:
      cb-controllers:
        url: https://raw.githubusercontent.com/carlosrodlop/K8s-lib/main/helm/charts/kube-prometheus-stack-local/dashboards/cloudbees-controllers.json
        token: ""
